@model WordViewModel

<div>
    <h1>Words from database</h1>
    <p>Those records are loaded from database.</p>
<div>
    <table class="table">
        <thead>
            <tr>
                    <th scope="col">#</th>
                    <th scope="col">English</th>
                    <th scope="col">Spanish</th>
                    <th scope="col">Gender</th>
                    <th scope="col">Lexical</th>
                    <th scope="col">X Correct</th>
                    <th scope="col">X Incorrect</th>
                    <th scope="col">X Trained</th>
                    <th scope="col">Edit</th>
                    <th scope="col">Delete</th>
            </tr>
        </thead>
        <tbody>
                @{
                    for (int i = 0; i < Model.Words.Count(); i++)
                    {
                    <tr>
                            <th scope="row">@(i+1)</th>
                            <td><p>@Model.Words[i].English</p></td>
                            <td>@Model.Words.ElementAt(i).Spanish</td>
                            <td>@Model.Words.ElementAt(i).GrammaticalGender?.Name</td>
                            <td>@Model.Words.ElementAt(i).LexicalCategory?.Name</td>
                            <td>@Model.Words.ElementAt(i).Statistic.TimesCorrect</td>
                            <td>@Model.Words.ElementAt(i).Statistic.TimesIncorrect</td>
                            <td>@(Model.Words.ElementAt(i).Statistic.TimesIncorrect + Model.Words.ElementAt(i).Statistic.TimesCorrect)</td>
                            <td><a asp-controller="Word" asp-action="Edit" asp-route-id="@Model.Words[i].Id">Edit</a></td>
                            <td><a asp-controller="Word" asp-action="Delete" asp-route-id="@Model.Words[i].Id">Delete</a></td>
                    </tr>
                    }
                    
                }
        </tbody>
    </table>
</div>
